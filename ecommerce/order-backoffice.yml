openapi: 3.0.3
info:
  title: Ecommerce 2.0 - Order Management
  description: |-
    E-commerce order system

    - [Product Listing API](index.html)
    - [Authentication API](authentication.html)
    - [Customer Order API](order.html)
    - [Order Management API](order-backoffice.html)
  version: 2.0.0
servers:
  - url: '{PROTOCOL}://{API_URL}'
    variables:
      API_URL:
        default: api.localhost
      PROTOCOL:
        enum:
          - 'http'
          - 'https'
        default: 'http'
tags:
  - name: Order
    description: Order Operations
  - name: Address
    description: Address Operations
  - name: Shipping
    description: Order Shipping Info
  - name: Billing
    description: Order Billing Info
  - name: Dealers
    description: Order Dealers
  - name: Customer
    description: Customer searching
  - name: Product
    description: Product search options
paths:
  /v2/order:
    post:
      tags:
        - Order
      summary: Create Order From Customer Cart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  type: string
                  example: cash
                clientId:
                  type: integer
                  description: Customer Id
                addressId:
                  type: integer
                  description: Address Id for delivery
                  example: 0
      responses:
        200:
          description: Order created info
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    $ref: "#/components/schemas/OrderBasicInfoModel"
        400:
          description: Invalid data
        401:
          description: Unauthorized
    get:
      tags:
        - Order
      summary: Get customer orders
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: false
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "customer"
        in: query
        description: Customer Id
        required: false
        schema:
          type: integer
          example: 40
      - name: "page"
        in: query
        description: Page number
        required: false
        schema:
          type: integer
          example: 1
          default: 1
      - name: "perpage"
        in: query
        description: Desired items per page
        required: false
        schema:
          type: integer
          example: 20
      responses:
        200:
          description: Order list
          content:
            application/json:
              schema:
                type: object
                properties:
                  client:
                    $ref: "#/components/schemas/CartCustomerModel"
                  pagination:
                    $ref: "#/components/schemas/PaginationModel"
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/ExtendedOrderInfoModel"
        400:
          description: Invalid data
        401:
          description: Unauthorized
        404:
          description: Not found
  /v2/order/{ORDER_ID}:
    get:
      tags:
        - Order
      summary: Get Order
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: false
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "ORDER_ID"
        in: path
        description: Order Id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Order data
          content:
            application/json:
              schema:
                type: object
                allOf: 
                  - type: object
                  - $ref: "#/components/schemas/ExtendedOrderInfoModel"
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/CartProductData'
        400:
          description: Invalid data
        401:
          description: Unauthorized
        404:
          description: Not found
    patch:
      tags:
        - Order
      summary: Update Order
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "ORDER_ID"
        in: path
        description: Order Id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  type: string
                  example: cash
                paymentStatus:
                  type: boolean
                status:
                  type: string
                  description: Order internal status
                  example: DEL
                addressId:
                  type: integer
                  description: Address Id for delivery
                  example: 0
                backofficeId:
                  type: integer
                  description: Backoffice admin internal identifier
                  example: 1
                dealerId:
                  type: integer
                  description: Backoffice dealer internal identifier
                  example: 1
                reason:
                  type: string
                  description: Reason for order cancelling or rejection
      responses:
        200:
          description: Order updated
        400:
          description: Invalid data
        401:
          description: Unauthorized
        404:
          description: Not found
  /v2/order/detailed:
    get:
      tags:
        - Order
      summary: Get customer orders with product list included
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: false
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "customer"
        in: query
        description: Customer Id
        required: false
        schema:
          type: integer
          example: 40
      - name: "page"
        in: query
        description: Page number
        required: false
        schema:
          type: integer
          example: 1
          default: 1
      - name: "perpage"
        in: query
        description: Desired items per page
        required: false
        schema:
          type: integer
          example: 20
      responses:
        200:
          description: Order list
          content:
            application/json:
              schema:
                type: object
                properties:
                  client:
                    $ref: "#/components/schemas/CartCustomerModel"
                  pagination:
                    $ref: "#/components/schemas/PaginationModel"
                  orders:
                    type: array
                    items:
                      type: object
                      allOf: 
                        - type: object
                        - $ref: "#/components/schemas/ExtendedOrderInfoModel"
                      properties:
                        items:
                          type: array
                          items:
                            $ref: '#/components/schemas/CartProductData'
        400:
          description: Invalid data
        401:
          description: Unauthorized
        404:
          description: Not found
  /v2/backoffice/client/address/{CUSTOMER_ID}:
    get:
      tags:
        - Address
      summary: List customer addresses
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "CUSTOMER_ID"
        in: path
        description: Customer Id 
        required: true
        schema:
          type: integer
          example: 4635
      responses:
        200:
          description: Addresses list
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: "#/components/schemas/CustomerAddressModel"
        401:
          description: Unauthorized
        404:
          description: Not found
  /v2/backoffice/client/lastinfo/{CUSTOMER_ID}:
    get:
      tags:
        - Address
      summary: List customer last address and last payment method
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "CUSTOMER_ID"
        in: path
        description: Customer Id 
        required: true
        schema:
          type: integer
          example: 4635
      responses:
        200:
          description: Customer last address-payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    $ref: "#/components/schemas/CustomerAddressModel"
                  paymentMethod:
                    type: string
                    example: mercadopago
        401:
          description: Unauthorized
        404:
          description: Not found
  /v2/address:
    post:
      tags:
        - Address
      summary: Create customer address
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client:
                  type: integer
                  example: 4635
                description:
                  type: string
                  example: "Casa"
                street:
                  type: string
                  example: "Juarez"
                number:
                  type: string
                  example: "31"
                number_interior:
                  type: string
                  example: "1"
                between_a:
                  type: string
                between_b:
                  type: string
                postal_code:
                  type: string
                  example: "03200"
                neighborhood:
                  type: integer
                  example: 711917
                phone:
                  type: string
                  example: "5512345678"
                instructions:
                  type: string
                  example: "Entregar en recepción"
      responses:
        200:
          description: Address created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        400:
          description: Invalid data
        401:
          description: Unauthorized
  /v2/order/shipment/{ORDER_ID}:
    get:
      tags:
        - Shipping
      summary: View order change statuses
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "ORDER_ID"
        in: path
        description: Order Id
        required: true
        schema:
          type: integer
          example: 5432
      responses:
        200:
          description: Order changes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      $ref: "#/components/schemas/OrderShippingStatusModel"
        404:
          description: Not found
  /v2/shipments/steps:
    get:
      tags:
        - Shipping
      summary: View shipping valid statuses
      responses:
        200:
          description: Order posible shipping states
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      $ref: "#/components/schemas/ShippingStatusModel"
  /v2/order/{ORDER_ID}/bill:
    get:
      tags:
        - Billing
      summary: View order billing data
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "ORDER_ID"
        in: path
        description: Order Id
        required: true
        schema:
          type: integer
          example: 5432
      responses:
        200:
          description: Order billilng data
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/OrderBillModel"
        401:
          description: Unauthorized
        404:
          description: Not found
  /v2/catalog/dealer:
    get:
      tags:
        - Dealers
      summary: view available dealers for order shipping
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      responses:
        200:
          description: Available dealer list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DealerModel"
        401:
          description: Unauthorized
  /v2/person/bymail/{SEARCH}:
    get:
      tags:
        - Customer
      summary: Search customer data by email or by phone
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "SEARCH"
        in: path
        description: Searching email or phone string
        required: true
        schema:
          type: string
          example: maria
      responses:
        200:
          description: Customer list result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CustomerModel"
        401:
          description: Unauthorized
  /v2/person/search/{SEARCH}:
    get:
      tags:
        - Customer
      summary: Search customer data by name
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "SEARCH"
        in: path
        description: Searching name string
        required: true
        schema:
          type: string
          example: maria
      responses:
        200:
          description: Customer list result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CustomerModel"
        401:
          description: Unauthorized
  /v2/person/{PROFILE}:
    get:
      tags:
        - Customer
      summary: Get customer data by profile UUID
      parameters:
      - name: "x-session"
        in: header
        description: Valid Admin session Id Token
        required: true
        schema:
          type: string
          example: 31e20b49c6fca6cadba6a294ed625376ac2c386a6c36422351e525867868ae1fbcab241ea06bf8f560a247033246f6aa11fd53ca1f602dc12012ae74bde9ca12
      - name: "PROFILE"
        in: path
        description: Customer profile UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Customer data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/CustomerModel"
        401:
          description: Unauthorized
        404:
          description: Not Found
  /v2/product/search:
    get:
      tags:
        - Product
      summary: Searching and listing product data
      parameters:
      - name: "q"
        in: query
        description: Search Query
        required: true
        schema:
          type: string
          example: loratadina
      - name: "related"
        in: query
        description: Should Search result include alternative property for each product?
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 1
          example: 0
      - name: "whithlots"
        in: query
        description: Should Search result include lot data for each product?
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 1
          example: 0
      - name: "includenostock"
        in: query
        description: Should Search result include products with no stock?
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 1
          example: 0
      responses:
        200:
          description: Product search result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductBasicData"
        404:
          description: Not Found
components:
  schemas:
    OkResponse:
      type: object
      description: Success response
      properties:
        status:
          type: string
          example: success
    CartCustomerModel:
      type: object
      properties:
        id:
          type: integer
          example: 12345
          description: Customer id
        name:
          type: string
          example: Luis González
        email:
          type: string
          format: email
        phone_number:
          type: integer
          example: 5512345678
        zip_code:
          type: string
          example: "03200"
    ProductBasicData:
      type: object
      description: Product Data Model
      properties:
        id:
          type: integer
          example: 746
          description: Product id
        name:
          type: string
          example: LORATADINA
        description:
          type: string
        dose:
          type: string
          example: 10 mg
        qty:
          type: integer
          example: 10
        is_active:
          type: boolean
        is_approved:
          type: boolean
        is_catalogued:
          type: boolean
        is_controlled:
          type: boolean
        is_refrigerated:
          type: boolean
        is_antibiotic:
          type: boolean
        barcode:
          type: integer
          example: 7501349024779
        molecule:
          type: string
          example: LORATADINA
        molecule_id:
          type: integer
          example: 966
        unit_price:
          type: number
          format: float
          example: 4.1
        max_publice_price:
          type: number
          format: float
          example: 75.00
        sell_price:
          type: number
          format: float
          example: 41.00
        content_unit_id:
          type: integer
          example: 57
        pharmaceutical_form_id:
          type: integer
          example: 36
        stock:
          type: integer
          example: 2
        palabras_claves:
          type: string
          example: LORATADINA 10 mg 10 TABS\nALERGIA
        is_promo:
          type: boolean
          example: false
        limite_promo:
          type: integer
          example: 0
        image_promo:
          type: string
          format: uri
        factor_promo:
          type: number
          format: float
        dose_id:
          type: integer
          example: 567
        search_terms:
          type: string
          example: Loratadina
        market_id:
          type: integer
          example: 4
        iva:
          type: number
          format: float
          example: 0.16
        ieps:
          type: number
          format: float
          example: 0.08
        pharmaceutical_form_name:
          type: string
          example: Tableta
        units_id:
          type: integer
        units:
          type: string
          example: Tableta(s)
        presentation_id:
          type: integer
        presentation:
          type: string
        promo_price:
          type: number
          format: float
        alternative:
          type: object
          nullable: true
        recommended:
          type: boolean
        unit_promo_price:
          type: number
          format: float
          example: 41
        uri:
          type: string
          format: uri
          example: loratadina-loratadina-10-mg-tableta-10--7501349024779
        images:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: FE_7501349024779_515
              alt:
                type: string
                example: 7501349024779 4010 loratadina loratadina 10 mg tableta 10
              url:
                type: string
                format: uri
                example: http://api.localhost/v2/image/7501349024779-4010-loratadina-loratadina-10-mg-tableta-10-
    CartProductData:
      description: Product Data Model
      allOf: 
        - $ref: "#/components/schemas/ProductBasicData"
        - type: object
          properties:
            promo_price:
              type: number
              format: float
            lot_id:
              type: integer
              example: 4391
            lot:
              type: string
              example: U23T410
            expiration_date:
              type: string
              format: date-time
              example: 2035-10-31 00:00:00
            remaining_months:
              type: integer
              example: 120
            item_id:
              type: integer
            quantity:
              type: integer
              example: 1
            stock_total:
              type: integer
              example: 1
            promo_factor:
              type: number
              format: float
              example: 0
            promo_image:
              type: string
              format: uri
            subtotal:
              type: number
              format: float
              example: 41.00
            total_price:
              type: number
              format: float
              example: 41
            gross_price:
              type: number
              format: float
              example: 41
            amount_tax:
              type: number
              format: float
            quantity_total:
              type: integer
              example: 1
    CartInfoModel:
      type: object
      description: Cart basic info Model
      properties:
        id:
          type: integer
          example: 12345
          description: Cart id
        uuid:
          type: string
          format: uuid
          description: Cart UUID
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        client_id:
          type: integer
          example: 1234
        total:
          type: number
          format: float
          example: 299.99
        totalQuantity:
          type: integer
          example: 3
        totalItems:
          type: integer
          example: 2
    OrderBasicInfoModel:
      type: object
      description: Esencial order info
      properties:
        id:
          type: integer
          example: 10000
          description: Order Id
        client_id:
          type: integer
          example: 1
          description: Order Id
        payment_method:
          type: string
          example: bank_transfer
        cost_shipping:
          type: number
          format: float
          example: 0
        delivery_place_id:
          type: integer
        total_qty:
          type: integer
          example: 1
        status_id:
          type: integer
          example: 1
        total_amount_net:
          type: number
          format: float
          example: 221.99
        total_amount_gross:
          type: number
          format: float
          example: 202.24
        total_ammount_tax:
          type: number
          format: float
          example: 18.75
        total_amount_discounted_notax:
          type: number
          format: float
          example: 202.24
        created_date:
          type: string
          format: date-time
    ExtendedOrderInfoModel:
      type: object
      properties:
        order:
          allOf: 
            - type: object
            - $ref: "#/components/schemas/OrderBasicInfoModel"
          properties:
            is_paid:
              type: boolean
            date_shipment:
              type: string
              format: date-time
            date_delivered:
              type: string
              format: date-time
            date_cancel:
              type: string
              format: date-time
            email:
              type: string
              format: email
            name:
              type: string
            total_iva:
              type: number
              format: float
            total_ieps:
              type: number
              format: float
            total_discount:
              type: number
              format: float
            subtotal_product_ivataxed:
              type: number
              format: float
            subtotal_product_iepstaxed:
              type: number
              format: float
            subtotal_product_notaxed:
              type: number
              format: float
            address:
              type: object
              $ref: "#/components/schemas/CustomerAddressModel"
    CustomerAddressModel:
      type: object
      properties:
        id:
          type: integer
          example: 0
        street:
          type: string
        outdoor_number:
          type: string
        interior_number:
          type: string
        beetween_street_a:
          type: string
        beetween_street_b:
          type: string
        zip_code:
          type: string
        description:
          type: string
        phone:
          type: integer
        is_active:
          type: boolean
        email:
          type: string
          format: email
        client_id:
          type: integer
        colonia_id:
          type: integer
        instrucciones:
          type: string
        shipping_promo:
          type: number
          format: float
          nullable: true
        is_default:
          type: boolean
        colonia_name:
          type: string
        shipping_cost:
          type: number
          format: float
        municipality_name:
          type: string
        state_name:
          type: string
    PaginationModel:
      type: object
      properties:
        page:
          type: integer
          example: 1
        perPage:
          type: integer
          example: 20
        itemsFound:
          type: integer
          example: 20
        itemsTotal:
          type: integer
          example: 60
        pagesTotal:
          type: integer
          example: 3
    OrderShippingStatusModel:
      type: object
      properties:
        title:
          type: string
          example: pending
        step_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
    ShippingStatusModel:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: pending
        name:
          type: string
          example: PickingPending
    OrderBillModel:
      type: object
      properties:
        id:
          type: integer
          example: 1
        custommer_id:
          type: integer
        rfc:
          type: string
        fiscalsystem:
          type: string
        cfdi:
          type: string
        postalcode:
          type: string
        created_at:
          type: string
          format: date-time
    DealerModel:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: integer
          example: 5512345678
    CustomerDataBasicModel:
      type: object
      properties:
        name:
          type: string
        secondname:
          type: string
        gender: 
          type: string
        lastname:
          type: string
        birthdate:
          type: string
          format: date
        newsletter_suscription:
          type: boolean
    CustomerModel:
      type: object
      properties:
        user_id:
          type: integer
          description: Customer Id
          example: 1
        email:
          type: string
          format: email
        phone_number:
          type: integer
          example: 5512345678
        person_id:
          type: string
          format: uuid
          description: Customer profile UUID
        person_name:
          type: string
        person_data:
          $ref: '#/components/schemas/CustomerDataBasicModel'